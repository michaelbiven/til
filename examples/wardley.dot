/*
graph d {
  splines=line;
  style=invis;
  subgraph cluster_0 {
    A [label="Customer"]
  }

  subgraph cluster_1 {
    B [label="Leisure Time"]
  }

  subgraph cluster_2 {
    C [label="Aggregator"]
    D [label="Branded"]
  }


 A -- B;
 B -- { C D };
 C -- D;
}


digraph d {
  rankdir=LR
  splines=line;
  style=invis;

  subgraph cluster_1 {
		style=filled;
		color=lightgrey;
		node [style=filled,color=white];
    C [label="Aggregator"]
		label = "Genesis (uncharted)";
	}

  subgraph cluster_2 {
		node [style=filled];
		F [label="Internet Broadcast"]
		label = "Custom";
		color=blue
	}

  subgraph cluster_3 {
		node [style=filled];
		D [label="Branded"]
    E [label="Content"]
		label = "Product";
		color=blue
	}

  subgraph cluster_4 {
		node [style=filled];
		A [label="Customer"]
    B [label="Leisure Time"]
		label = "Commodity (industrialized)";
		color=blue
	}

 A -> B;
 B ->  { C D };
 C -> D;
 { C D } -> E;
 E -> F;
}


Evolution: Genesis (uncharted) » Custom » Product » Commodity (industrialized) 
Time Chain: Invisible «» Visible




start [shape=plaintext; label=CUSTOMER];

}


{ rank=same rA sA tA }
{ rank=same uB vB wB }c

*/

digraph AlignmentMap {
    /*
    /*
    Author: Lars Barkman
    Created: 2015-08-25
    Changelog: See version control system

    This is an example of an Alignment Map visualized with the help of Graphviz.
    This solution depends on either generation or maintaining a .dot file and from that generating a image or document.
    Personally, I think that editing the file by hand should be fine if the naming conventions used are intuitive.
    Alignment maps first came to my attention on Martin Fowlers blog (http://martinfowler.com/bliki/AlignmentMap.html).
    */

    // General layout for the graph
    rankdir=LR; // Direction of the graph Left to Right
    node [style="rounded,filled",color=black,shape=box,fillcolor=white]; // Defines the default layout of the nodes
    graph [style=filled, splines=line]; // Fills the subgraphs and defines the layout of the connections
    rank = same; // Makes sure that nodes are properly aligned even without a connection

    // Column for Business Outcomes
    subgraph cluster_business_outcome {
        label="Business Outcomes"
        graph [color=pink];

        business_outcome_Customer_Acquisition [label="Customer\nAcquisition", fillcolor=red];
        business_outcome_Customer_Retention [label="Customer\nRetention", fillcolor=chartreuse2];
        business_outcome_Cost_of_Operations [label="Cost of\nOperations", fillcolor=chocolate1];
    }

    // Column for IT Outcomes
    subgraph cluster_IT_outcome {
        label="IT Outcomes"
        graph [color=mistyrose2];

        IT_outcome_Platform_Unbundling [label="Platform\nUnbundling", fillcolor=red];
        IT_outcome_Site_Ux [label="Site Ux", fillcolor=chartreuse2];
        IT_outcome_Site_Performance [label="Site\nPerformance", fillcolor=chocolate1];
        IT_outcome_Site_Scalability [label="Site\nScalability", fillcolor=chocolate1];
    }

    // Column for IT Initiatives
    subgraph cluster_IT_initiatives {
        label="IT Initiatives"
        graph [color=papayawhip];

        IT_initiatives_API [label="API", fillcolor=chartreuse2];
        IT_initiatives_Pluginize [label="Pluginize", fillcolor=red];
        IT_initiatives_Responsive_Rewrite [label="Responsive\nRewrite", fillcolor=chartreuse2];
        IT_initiatives_Catalog_Performance [label="Catalog\nPerformance", fillcolor=red];
        IT_initiatives_Sharding [label="Sharding", fillcolor=chocolate1];
    }

    // Column for Action Items
    subgraph cluster_action_items {
        label="Action Items"
        graph [color=darkseagreen1];

        action_items_0 [label="..."];
        action_items_1 [label="..."];
        action_items_App_X [label="App X", fillcolor=chartreuse2];
        action_items_Search_In_One [label="Search-\nIn-One", fillcolor=red];
        action_items_4 [label="..."];
    }

    // Connections between nodes in the different columns
    // business_outcome_* -> IT_outcome_Platform_*
    business_outcome_Customer_Acquisition   -> IT_outcome_Platform_Unbundling;
    business_outcome_Customer_Acquisition   -> IT_outcome_Site_Ux;
    business_outcome_Customer_Retention		-> IT_outcome_Site_Ux;
    business_outcome_Customer_Retention		-> IT_outcome_Site_Performance;
    business_outcome_Cost_of_Operations		-> IT_outcome_Site_Performance;
    business_outcome_Cost_of_Operations		-> IT_outcome_Site_Scalability;
    // IT_outcome_* -> IT_initiatives_*
    IT_outcome_Platform_Unbundling          -> IT_initiatives_API;
    IT_outcome_Platform_Unbundling          -> IT_initiatives_Pluginize;
    IT_outcome_Site_Ux                      -> IT_initiatives_Responsive_Rewrite;
    IT_outcome_Site_Performance             -> IT_initiatives_Catalog_Performance;
    IT_outcome_Site_Scalability             -> IT_initiatives_Sharding;
    // IT_initiatives_* -> action_items_*
    IT_initiatives_API                      -> action_items_0;
    IT_initiatives_Pluginize                -> action_items_1;
    IT_initiatives_Responsive_Rewrite       -> action_items_App_X;
    IT_initiatives_Catalog_Performance      -> action_items_Search_In_One;
    IT_initiatives_Sharding                 -> action_items_4;

}
